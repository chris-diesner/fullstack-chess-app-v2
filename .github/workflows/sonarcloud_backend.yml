name: SonarCloud Backend Analysis

on: [push, pull_request]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: pytest --cov=backend --cov-report=xml:backend/coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}
        with:
          projectBaseDir: ./backend
          args: >
            -Dsonar.projectKey=chris-diesner_fullstack-chess-game-backend
            -Dsonar.organization=chris-diesner
            -Dsonar.python.coverage.reportPaths=backend/coverage.xml

      - name: Install jq (for JSON parsing)
        run: sudo apt-get install jq -y

      - name: Check SonarCloud Quality Gate
        run: |
          TIMEOUT=180  # Maximal 180 Sekunden warten
          INTERVAL=10  # Alle 10 Sekunden prüfen
          ELAPSED=0

          while [[ $ELAPSED -lt $TIMEOUT ]]; do
            STATUS=$(curl -s "https://sonarcloud.io/api/qualitygates/project_status?projectKey=chris-diesner_fullstack-chess-game-backend" \
              -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN_BACKEND }}" | jq -r '.projectStatus.status')

            if [[ "$STATUS" == "OK" ]]; then
              echo "✅ SonarCloud Quality Gate passed!"
              exit 0
            elif [[ "$STATUS" == "ERROR" ]]; then
              echo "❌ SonarCloud Quality Gate failed!"
              exit 1
            fi

            echo "⏳ Waiting for SonarCloud analysis to complete... ($ELAPSED/$TIMEOUT seconds elapsed)"
            sleep $INTERVAL
            ELAPSED=$((ELAPSED + INTERVAL))
          done

          echo "❌ SonarCloud Quality Gate check timed out!"
          exit 1
