


Deine neue strukturierte FastAPI-Architektur sieht jetzt so aus:

📂 backend/
 ├── 📂 controllers/
 │   ├── auth.py        # Login & Auth (nur API-Endpoints)
 │   ├── user.py        # User API-Endpoints
 ├── 📂 services/
 │   ├── auth_service.py # Token-Generierung
 │   ├── user_service.py # User-Registrierung, Login-Checks
 ├── 📂 repositories/
 │   ├── user_repo.py    # User-Datenbank-Operationen
 ├── 📂 models/
 │   ├── user.py        # User-Schemas (Pydantic)
 ├── 📂 database/
 │   ├── mongodb.py     # DB-Verbindung
 ├── 📂 tests/
 ├── main.py            # FastAPI-App (Einstiegspunkt)
 ├── .env               # Secrets, MongoDB-URI, JWT-Key
 ├── requirements.txt   # Python-Abhängigkeiten


🔍 Projektstruktur für den User-Bereich

 ├── 📂 controllers/       # 🏠 FastAPI-Router (statt "Controller")
 │   ├── user_controller.py    # API-Endpoints für User
 │
 ├── 📂 services/          # ⚡ Business-Logik (statt "Service")
 │   ├── user_service.py       # Verarbeitet Logik (Registrierung, Login, etc.)
 │
 ├── 📂 repositories/      # 💾 Datenbankzugriff (statt "Repository")
 │   ├── user_repo.py          # DB-Operationen für User
 │
 ├── 📂 models/            # 📌 Pydantic-Modelle (Schema)
 │   ├── user.py               # UserSchema (UUID statt MongoDB ObjectId)
 │
 ├── 📂 database/          # 🗄️ DB-Verbindung
 │   ├── mongodb.py            # MongoDB-Client
 │
 ├── main.py               # 🏠 FastAPI-App Einstiegspunkt



/chess/
│── models/
│   ├── chess_game.py ✅ (Speichert Spiel-Session, Game-ID, Spielerinfos)
│   ├── figure.py ✅ (Schachfiguren & Positionen)
│── repositories/
│   ├── event_repository.py ✅ (Speichert Move-Events für Wiederherstellung)
│   ├── game_repository.py ✅ (Verwaltet aktive Spiele & Spielstände)
│── services/
│   ├── chess_game_service.py ✅ (Verarbeitet Spielregeln & Zuglogik)
│   ├── move_validation_service.py ✅ (Prüft Zugregeln)
│   ├── session_manager.py ✅ (Verwaltet Spieler, Zugabfolge, Locking)
│── controllers/
│   ├── chess_game_controller.py ✅ (WebSocket/REST API für Multiplayer)
│── app.py ✅ (Startet den Server)
